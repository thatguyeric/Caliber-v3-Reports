<aura:component controller="ReportsController">
    <!-- init is for testing, remove when done testing -->
    <!--<aura:handler name="init" value="{!this}" action="{!c.test}"/>-->
    <!-- Hack to handle receiving the server response before chart.js is done loading.
   		If removing the hack, replace the change event handler with a call to
   		createChart in the server callback function.
	-->
    <aura:attribute name="isChartNeedRender" type="Boolean" default="false"
                    description="Used in a hack to handle receiving
                                 the server response before chart.js is done loading.
                                 The isChartNeedRender attribute indicates whether
                                 to perform the hack or not."/>
    <aura:handler name="render" value="{!this}" action="{!c.handleRender}"
                  description="Used in a hack to handle receiving
                               the server response before chart.js is done loading.
                               The render system event handler is only used to
                               create the chart as part of the hack"/>
    <aura:handler name="change" value="{!v.serverResponseData}" action="{!c.handleServerResponseDataChange}"
                  description="Use a change event on serverResponseData to allow for
                               the hack used to work around receiving the response from
                               the server before chart.js is done loading.
                               If removing the hack, replace this with a call to
                               createChart in the server callback function."/>
    <!-- include external JavaScript libraries -->
    <ltng:require scripts="{!$Resource.chartjs}"
                  afterScriptsLoaded="{!c.handleScriptsLoaded}"/>
    <aura:handler event="c:ReportFilterChange" action="{!c.handleReportFilterChange}"
                  description="Handle the application event fired when
                               the report filters change."/>
    <aura:attribute name="isScriptsLoaded" type="Boolean" default="false"
                    description="The isScriptsLoaded attribute is used to avoid
                                 creating the chart before chart.js is done loading"/>
    <aura:attribute name="serverResponseData" type="Object"
                    description="The serverResponseData attribute holds
                                 the data returned by the server"/>
    <!-- List of trainees -->
    <aura:attribute name="shownTraineesOptions" type="List"
                    description="The shownTraineesOptions attribute is a list of
                                 all trainee names with an index referencing the
                                 index in the server response data.
                                 Used to allow the user to select trainees to show.
                                 It is in the format { label: String, value: Integer }"/>
    <aura:attribute name="shownTraineesValue" type="List"
                    description="The shownTraineesValue attribute is a list of
                                 integers as an index referencing the
                                 index in the server response data.
                                 Used to store the trainees the user has selected to show."/>
    <aura:attribute name="errorMsg" type="String"
                    description="The errorMsg attribute stores error messages from the controller"/>
    <!-- Hide error message element unless there is an error message -->
    <aura:if isTrue="{!not(empty(v.errorMsg))}">
        <div>{!v.errorMsg}</div>
    </aura:if>
    <!-- Report is only visible if filters apply to it -->
    <lightning:layout aura:id="reportContentContainer" class="report-content-container">
        <lightning:layout class="panel-header">
            <aura:if isTrue="{!v.shownTraineesOptions.length > 1}">
                <!-- Use a lightning utility icon -->
                <!-- use either utility:people or utility:user -->
                <!-- Button to show list of trainees to show/hide -->
                <lightning:buttonIcon class="trainee-button"
                                      iconClass="trainee-button-icon"
                                      iconName="utility:people"
                                      variant="bare"
                                      onclick=""/>
            </aura:if>
        </lightning:layout>
        <lightning:layout>
            <aura:if isTrue="{!v.shownTraineesOptions.length > 1}">
                <lightning:checkboxGroup name="Shown Trainees"
                                         label="Trainees"
                                         options="{!v.shownTraineesOptions}"
                                         value="{!v.shownTraineesValue}"
                                         onchange="{!c.updateShownTraineeIndexesList}"
                                         description="Used to choose which trainees to show/hide"/>
            </aura:if>
        </lightning:layout>
        <!-- chart.js puts the chart here -->
        <canvas aura:id="chart"/>
    </lightning:layout>
</aura:component>